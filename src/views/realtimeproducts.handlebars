<h1>Lista de productos en tiempo real</h1>
{{#each products}}
  <h2>{{this.title}}</h2>
  <p>{{this.description}}</p>
  <p>{{this.code}}</p>
  <p>{{this.price}}</p>
  <p>{{this.status}}</p>
  <p>{{this.stock}}</p>
  <p>{{this.id}}</p>
{{/each}}


<form id="createProductForm">
  <input id="title" type="text" name="nombre" placeholder="Nombre">
  <input id="description" type="text" name="descripcion" placeholder="Descripción">
  <input id="code" type="text" name="Code" placeholder="Code">
  <input id="price" type="text" name="price" placeholder="Price">
  <input id="status" type="text" name="status" placeholder="Status">
  <input id="stock" type="text" name="stock" placeholder="Stock">
  <button type="submit">Crear producto</button>
</form>
<br>

<h3>Eliminar Producto</h3>
 <form id="deleteProductForm">
<input id="Delete" type="text" name="delete" placeholder="Id Producto">
    <button id="deleteProductBtn" type="submit">Eliminar</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script src="/js/index.js"></script>

{{!-- <script>
  const socket = io();

  socket.on('connect', () => {
    console.log('Conectado al servidor de sockets');
  });

  const createProductForm = document.getElementById('createProductForm');

  createProductForm.addEventListener('submit', event => {
    event.preventDefault();

    const formData = new FormData(createProductForm);
    const product = Object.fromEntries(formData.entries());

    socket.emit('createProduct', product);
  });

  // Escuchar eventos de clic en los botones de eliminación
  const deleteProductButtons = document.getElementsByClassName('deleteProductBtn');
  Array.from(deleteProductButtons).forEach(button => {
    button.addEventListener('click', event => {
      event.preventDefault();
      const productId = event.target.dataset.productId;
      deleteProduct(productId);
    });
  });

  --}}
